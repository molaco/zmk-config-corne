/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// #define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/pointing.h>
// #include <spanish_keymap.h>

#define DEFAULT 0
#define SYM     1
#define NAV     2
#define NUM     3
#define MISC    4
#define MOUSE   5

&led_strip {
  chain-length = <27>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
        ignore-modifiers;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        // QWERTY Layer (default, equivalent to _QWERTY)
        qwerty_layer {
            display-name = "DEF"; 
            bindings = <
                &kp ESC   &kp Q     &kp W     &kp E     &kp R      &kp T       &kp Y     &kp U     &kp I        &kp O      &kp P     &kp BSPC
                &kp LSHFT &kp A     &kp S     &kp D     &kp F      &kp G       &kp H     &kp J     &kp K        &kp L      &kp SEMI  &kp RET
                // &kp LSHFT &kp A     &kp S     &kp D     &kp F      &kp G       &kp H     &kp J     &kp K     &kp L     &kp TILDE &kp RET
                &kp LCTRL &kp Z     &kp X     &kp C     &kp V      &kp B       &kp N     &kp M     &kp COMMA    &kp DOT    &kp APOS  &kp CAPS
                // &kp LCTRL &kp Z     &kp X     &kp C     &kp V      &kp B       &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp CAPS
                                    &kp LSHFT &mo NAV   &kp LCTRL  &kp SPACE   &mo SYM   &kp RET
            >;
        };

        // Symbol Layer (equivalent to _SYM)
        sym_layer {
            display-name = "SYM"; 
            bindings = <
                &trans &kp LS(N1) &kp RA(N2)    &kp RA(N3) &kp LS(N4)    &kp LS(N5)    &kp LS(N7)    &kp LS(N8)   &kp LS(N9)   &kp LS(MINUS) &kp LS(EQUAL) &trans
                // &trans    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &kp FSLH  &kp LPAR  &kp RPAR  &kp QMARK &none     &trans
                &trans &kp RA(N1) &kp MINUS     &kp LS(N2) &kp LS(COMMA) &kp LS(DOT)   &kp RA(GRAVE) &kp RA(LBKT) &kp RA(RBKT) &kp LS(N6)    &kp RA(N4)    &trans
                &trans &kp NUBS   &kp LS(NUBS)  &none      &kp SLASH     &kp LS(SLASH) &kp LS(LBKT)  &kp RA(APOS) &kp RA(BSLH) &none         &none         &trans
                                                &trans     &trans        &trans        &trans        &trans        &trans
                
            >;
        };

        // Navigation Layer (equivalent to _NAV)
        nav_layer {
            display-name = "NAV"; 
            bindings = <
                &trans    &kp ESC    &tog MOUSE  &tog MISC  &none     &kp C_PP  &kp BSPC  &none     &kp HOME  &kp END   &none &none
                // &trans    &kp ESC    &none       &none      &none     &kp K_PP  &kp BSPC  &none     &kp HOME  &kp END   &none    &none
                &trans    &skq LSHFT &skq LCTRL  &skq LALT  &skq LGUI &kp TAB   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none    &none
                &trans    &none      &none       &none      &none     &none     &kp RET   &none     &kp PG_UP &kp PG_DN &kp CAPS &none
                                     &trans      &trans     &trans    &trans    &trans    &trans
            >;
        };


        // Number Layer (equivalent to _NUMB)
        num_layer {
            display-name = "NUM"; 
            bindings = <
                &trans    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5    &kp N6    &kp N7      &kp N8     &kp N9       &kp N0 &trans
                &trans    &skq LSHFT &skq LCTRL &skq LALT  &skq LGUI  &kp F11   &kp F12   &kp KP_PLUS &kp LS(N0) &kp LS(RBKT) &none  &trans
                &trans    &kp F1     &kp F2     &kp F10    &kp DEL    &none     &none     &kp MINUS   &none      &none        &none  &trans
                                     &trans     &trans     &trans     &trans    &trans    &trans
            >;
        };

        misc_layer {
            display-name = "MISC"; 
            bindings = <
                &none &rgb_ug RGB_SAI &rgb_ug RGB_SAD &tog MISC      &rgb_ug RGB_BRD &none           &none &none &none &none &none &RGB_COLOR_HSB(128,100,100)
                &none &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &none &none &none &none &none &rgb_ug RGB_SPD
                &none &rgb_ug RGB_TOG &rgb_ug RGB_OFF &rgb_ug RGB_ON &rgb_ug RGB_BRI &rgb_ug RGB_EFF &none &none &none &none &none &rgb_ug RGB_SPI
                // &none &none           &none           &none          &none           &none        &none &none &none &none &none &none
                                                                         &none &none &none        &none &none &none
            >;
        };

        mouse_layer {
            display-name = "MOUSE"; 
            bindings = <
                 &none &none &tog MOUSE     &mmv MOVE_UP   &none           &msc SCRL_UP     &none &none &none &none &none &none
                 &none &none &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCRL_DOWN   &none &none &none &none &none &none 
                 &none &none &none          &none          &none           &none            &none &none &none &none &none &none 
                                            &none          &mkp MB1        &mkp MB2         &none &none &none
            >;
        };
    };
};
